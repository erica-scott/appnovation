<?php
/**
 * Tests the functionality of JDT User Notes DB file.
 */
class JDTUserNotesDBTest extends DrupalWebTestCase {
	protected $priviledged_user;

	/**
	 * Provides the user interface information.
	 */
	public static function getInfo() {
		$info = array(
			'name' => 'JDT User Notes DB Test',
			'description' => 'Asserts that JDT User Notes DB methods work properly',
			'group' => 'JDT User Notes',
		);

		return $info;
	}

	/**
	 * Sets up the proper environment needed to run tests
	 */
	public function setUp() {
		parent::setUp(array('jdt_user_notes'));

		$this->priviledged_user = $this->drupalCreateUser(array(
 				'creating notes',
 				'reading notes',
 				'updating notes',
 				'deleting notes',
 		));
		
		$this->drupalLogin($this->priviledged_user);
	}

	/**
	 * Tests CRUD Create function.
	 */
	public function test_jdt_user_notes_create() {
		module_load_include('php', 'jdt_user_notes', 'jdt_user_notes_crud');

		$fields = array(
	  			'article_nid' => 0,
	  			'author_uid' => 0,
	  			'note_text' => 'Blah blah blah',
	  );
		
		$result = create($fields);
	 	$message = 'Should create one new note, and return true: ' . $result;
	 	$this->assertTrue($result, $message);
	}

	/**
	 * Tests the CRUD Read function.
	 */
	public function test_jdt_user_notes_read() {
		module_load_include('php', 'jdt_user_notes', 'jdt_user_notes_crud');

		$fields = array(
	 		'article_nid' => 0,
	 		'author_uid' => 0,
	 		'note_text' => 'Blah blah blah',
	 	);
	 	$res = create($fields);
	 	$note_id = dpm($res);

	 	$result = read($note_id);

	 	if (is_array($result) && sizeof($result) == 1) {
	 		$arr_result = TRUE;
	 	}
	 	else {
	 		$arr_result = FALSE;
	 	}

	 	$message = 'Result should be an array of size 1';
	 	$this->assertTrue($arr_result, $message);

	 	$this->assertEqual($result[0]['article_nid'], 0);

	 	$this->assertEqual($result[0]['author_uid'], 0);

	 	$this->assertEqual($result[0]['note_text'], 'Blah blah blah');
	}

	/**
	 * Tests the CRUD Update function.
	 */
	public function test_jdt_user_notes_update() {
		module_load_include('php', 'jdt_user_notes', 'jdt_user_notes_crud');

		$fields = array(
	  	'article_nid' => 0,
	  	'author_uid' => 0,
	  	'note_text' => 'Blah blah blah',
	  );

	  $res = create($fields);
	  $note_id = dpm($res);

	  $fields = array(
	 		'article_nid' => 0,
	 		'author_uid' => 0,
	 		'note_text' => 'New text!',
	 	);
	 	$result = update($note_id, $fields);
	 	$message = 'Should succesfully update the note of id: ' . $note_id . ' Result: ' . $result;
	  $this->assertTrue($result, $message);
	}

	/**
	 * Tests the CRUD Delete function.
	 */
	public function test_jdt_user_notes_delete() {
		module_load_include('php', 'jdt_user_notes', 'jdt_user_notes_crud');

		$fields = array(
	 		'article_nid' => 0,
	 		'author_uid' => 0,
	 		'note_text' => 'Blah blah blah',
	 	);
	 	$res = create($fields);
	 	$note_id = dpm($res);
	 
	 	$result = delete($note_id);
	 	$message = 'Should succesfully delete the note of id: ' . $note_id . ' Result: ' . $result;
	 	$this->assertTrue($result, $message);
	}
}
