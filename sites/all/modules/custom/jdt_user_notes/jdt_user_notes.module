<?php
/**
 * @file
 * JDT User Notes Module File.
 */

/**
 * Include CRUD file.
 */
include_once 'jdt_user_notes.crud.inc';

/**
 * Implements hook_permission().
 *
 * Controls permissions.
 */
function jdt_user_notes_permission() {
  $permissions = array(
    'create notes' => array(
      'title' => t('Add a Note'),
    ),
    'read notes' => array(
      'title' => t('Read a Note'),
    ),
    'update notes' => array(
      'title' => t('Edit a Note'),
    ),
    'delete notes' => array(
      'title' => t('Delete a Note'),
    ),
  );

  return $permissions;
}

/**
 * Implements hook_menu().
 */
function jdt_user_notes_menu() {
  $items = array();

  $items['jdt_user_notes/add/%'] = array(
    'title' => 'Add a Note',
    'page callback' => 'jdt_user_notes_add',
    'page arguments' => array(2),
    'access arguments' => array('create notes'),
  );

  $items['jdt_user_notes/edit/%/%'] = array(
    'title' => 'Edit a Note',
    'page callback' => 'jdt_user_notes_edit',
    'page arguments' => array(2, 3),
    'access arguments' => array('update notes'),
  );

  return $items;
}

/**
 * Custom handler for jdt_user_notes_add().
 */
function jdt_user_notes_add($article_nid) {
  $note_id = '';
  $form = drupal_get_form('jdt_user_notes_form', $note_id, $article_nid);
  return $form;
}

/**
 * Submits data for jdt_user_notes_add().
 */
function jdt_user_notes_add_submit($form, &$form_state) {
  global $user;

  if (strlen($form_state['input']['note_title']) >= 255) {
    drupal_set_message(t('Error: The note title is longer than 255 characters. 
      Please try again.'));
  }
  elseif (strlen($form_state['input']['note_body']) >= 255) {
    drupal_set_message(t('Error: The note body is longer than 255 characters. 
      Please try again.'));
  }
  else {
    $fields = array(
      'article_nid' => $form_state['temporary']['article_nid'],
      'author_uid' => $user->uid,
      'note_title' => $form_state['input']['note_title'],
      'note_text' => $form_state['input']['note_body'],
    );

    $result = jdt_user_notes_create($fields);

    if ($result == NULL) {
      drupal_set_message(t('There was an error creating this note. 
        Please try again.'));
    }
    else {
      drupal_set_message(t('This note has been succesfully created!'));
    }
  }
}

/**
 * Custom handler for jdt_user_notes_edit().
 */
function jdt_user_notes_edit($note_id, $article_nid) {
  $check = jdt_user_notes_read($note_id);

  if (empty($check) || $check['article_nid'] != $article_nid) {
    $message = 'This article note does not exist!';
    $form = drupal_get_form('jdt_user_notes_error_form', $message);
  }
  else {
    $form = drupal_get_form('jdt_user_notes_form', $note_id, $article_nid);
  }

  return $form;
}

/**
 * Submits data for jdt_user_notes_edit().
 */
function jdt_user_notes_edit_submit($form, &$form_state) {
  global $user;

  if (strlen($form_state['input']['note_title']) >= 255) {
    drupal_set_message(t('Error: The note title is longer than 255 characters. 
      Please try again.'));
  }
  elseif (strlen($form_state['input']['note_body']) >= 255) {
    drupal_set_message(t('Error: The note body is longer than 255 characters. 
      Please try again.'));
  }
  else {
    $fields = array(
      'article_nid' => $form_state['temporary']['article_nid'],
      'author_uid' => $user->uid,
      'note_title' => $form_state['input']['note_title'],
      'note_text' => $form_state['input']['note_body'],
    );

    $note_id = intval($form_state['temporary']['note_id']);

    $result = jdt_user_notes_update($note_id, $fields);

    if ($result === 0) {
      drupal_set_message(t('This note has not been editted.'));
    }
    else {
      drupal_set_message(t('This note has been succesfully editted!'));
    }
  }
}

/**
 * Custom adding/editting form.
 */
function jdt_user_notes_form($form, &$form_state, $note_id, $article_nid) {

  if (!empty($note_id)) {
    $note = jdt_user_notes_read($note_id);
  }

  $form['note_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#value' => isset($note['note_title']) ? $note['note_title'] : '',
  );

  $form['note_body'] = array(
    '#type' => 'textarea',
    '#title' => t('Body'),
    '#value' => isset($note['note_text']) ? $note['note_text'] : '',
  );

  $form_state['temporary']['article_nid'] = $article_nid;

  $form_state['temporary']['note_id'] = $note_id;

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => isset($note) ? t('Edit') : t('Create'),
  );

  if (isset($note)) {
    $form['#submit'][] = 'jdt_user_notes_edit_submit';
  }
  else {
    $form['#submit'][] = 'jdt_user_notes_add_submit';
  }

  return $form;
}

/**
 * Custom form for any error that occurs, so we dont' display other form.
 */
function jdt_user_notes_error_form($form, &$form_state, $message) {
  $form['body'] = array(
    '#markup' => t($message),
  );

  return $form;
}
