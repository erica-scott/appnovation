<?php
/**
 * @file
 * JDT User Notes Module File.
 */

/**
 * Include CRUD file.
 */
include_once 'jdt_user_notes.crud.inc';

/**
 * Implements hook_permission() for jdt_user_notes().
 *
 * Controls permissions.
 */
function jdt_user_notes_permission() {
  $permissions = array(
    'creating notes' => array(
      'title' => t('Add a Note'),
    ),
    'reading notes' => array(
      'title' => t('Read a Note'),
    ),
    'updating notes' => array(
      'title' => t('Edit a Note'),
    ),
    'deleting notes' => array(
      'title' => t('Delete a Note'),
    ),
  );

  return $permissions;
}

/**
 * Implements hook_menu() for jdt_user_notes().
 */
function jdt_user_notes_menu() {
  $items = array();

  $items['jdt_user_notes/add/%'] = array(
    'title' => 'Add a Note',
    'page callback' => 'jdt_user_notes_add',
    'page arguments' => array(2),
    'access arguments' => array('creating notes'),
  );

  $items['jdt_user_notes/edit/%/%'] = array(
    'title' => 'Edit a Note',
    'page callback' => 'jdt_user_notes_edit',
    'page arguments' => array(2, 3),
    'access arguments' => array('updating notes'),
  );

  return $items;
}

/**
 * Custom handler for jdt_user_notes_add_form().
 */
function jdt_user_notes_add($article_nid) {
  $note_id = '';
  $form = drupal_get_form('jdt_user_notes_form', $note_id, $article_nid);
  return $form;
}

/**
 * Submits data from jdt_user_notes_add().
 */
function jdt_user_notes_add_submit($form, &$form_state) {
  global $user;

  $fields = array(
    'article_nid' => $form_state['values']['article_nid'],
    'author_uid' => $user->uid,
    'note_title' => $form_state['input']['note_title'],
    'note_text' => $form_state['input']['note_body'],
  );

  $result = jdt_user_notes_create($fields);

  if ($result != NULL) {
    drupal_set_message(t('This note has been succesfully created!'));
  }
  else {
    drupal_set_message(t('AN ERROR HAS OCCURRED'));
  }
}

/**
 * Custom handler for jdt_user_notes_edit_form().
 */
function jdt_user_notes_edit($note_id, $article_nid) {
  $form = drupal_get_form('jdt_user_notes_form', $note_id, $article_nid);
  return $form;
}

/**
 * Submits data from jdt_user_notes_edit().
 */
function jdt_user_notes_edit_submit($form, &$form_state) {
  global $user;

  $fields = array(
    'article_nid' => intval($form_state['values']['article_nid']),
    'author_uid' => intval($user->uid),
    'note_title' => $form_state['input']['note_title'],
    'note_text' => $form_state['input']['note_body'],
  );

  $note_id = intval($form_state['values']['note_id']);

  $result = jdt_user_notes_update($note_id, $fields);

  if ($result == 0) {
    drupal_set_message(t('This note has not been editted.'));
  }
  else {
    drupal_set_message(t('This note has been succesfully editted!'));
  }
}

/**
 * Custom form.
 */
function jdt_user_notes_form($form, &$form_state, $note_id, $article_nid) {
  if ($note_id != '') {
    $note = jdt_user_notes_read($note_id);
  }

  $form['note_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#value' => isset($note['note_title']) ? $note['note_title'] : '',
  );

  $form['note_body'] = array(
    '#type' => 'textarea',
    '#title' => t('Body'),
    '#value' => isset($note['note_text']) ? $note['note_text'] : '',
  );

  $form['article_nid'] = array(
    '#type' => 'hidden',
    '#value' => $article_nid,
  );

  $form['note_id'] = array(
    '#type' => 'hidden',
    '#value' => $note_id,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => isset($note) ? t('Edit') : t('Create'),
  );

  if (isset($note)) {
    $form['#submit'][] = 'jdt_user_notes_edit_submit';
  }
  else {
    $form['#submit'][] = 'jdt_user_notes_add_submit';
  }

  return $form;
}
